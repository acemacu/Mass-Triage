/*
For more information on the technology stack selected, please refer to the document "Technology feasibility analysis"
Developed by: Carnegie Mellon University - Team Triage
Copyright:    Field Applications
*/

$("#tableForPatients").tablesorter({
        headers: {
            // assign the secound column (we start counting zero)
            9: {
                // disable it by setting the property sorter to false
		sorter: false
            }}});

<% if @ambulances.count > 0 %>
  resetAmbulanceValues();

  <% for ambulance in @ambulances_assigned %>
    updateAmbulanceCount('<%= escape_javascript(ambulance.status) %>', '<%=  ambulance.number %>');
  <% end %>

  var ambulanceList = '';
  var hashAmbulances = new Object();
  <% for a in @general_ambulances %>
    ambulanceList = ambulanceList + '"<%= a.id %>":"<%= escape_javascript(a.idAmbulance) %>",';
    hashAmbulances["<%= a.id %>"] = "<%= escape_javascript(a.idAmbulance) %>";
  <% end %>
  ambulanceList = ambulanceList.substring(0, ambulanceList.length-1);

  <% for p in @all_patients %>
    updateAmbulanceListInPatients('<%= p.id %>', hashAmbulances["<%= p.ambulance_id %>"], ambulanceList);
  <% end %>
<% end %>

function updateAmbulanceListInPatients(id, ambulance_id, ambulanceList) {
  var updateRoute = '/incidents/' + '<%= @incident_id %>' + '/patients/' + id;
  generatejEditableCombo(id, ambulance_id, 'ambulance_patient', '1', 'ambulance[idAmbulance]', ambulanceList, 'ambulance_patient', updateRoute);
}

function resetAmbulanceValues() {
  $("#en_route_amb").text("EN ROUTE: 0");
  $("#transported_amb").text("TRANSPORTED: 0");
  $("#delayed_amb").text("DELAYED: 0");
  $("#arrived_amb").text("AT SCENE: 0");
  $("#staged_amb").text("STAGING: 0");
}

function updateAmbulanceCount(statusMessage, number) {
    if (statusMessage == "En Route") {
      $('#en_route_amb').text("EN ROUTE: " + number);
    } else if (statusMessage == "Transported") {
      $("#transported_amb").text("TRANSPORTED: " + number);
    } else if (statusMessage == "Delayed") {
      $("#delayed_amb").text("DELAYED: " + number);
    } else if (statusMessage == "At Scene") {
      $("#arrived_amb").text("AT SCENE: " + number);
    } else if (statusMessage == "Staging") {
      $("#staged_amb").text("STAGING: " + number);
    }
}

<% if @incident.count > 0 %>

  var incidentTypeList = '';
  var hashIncidentTypes = new Object();
  <% for t in @incident_types %>
    incidentTypeList = incidentTypeList + '"<%= t.id %>":"<%= escape_javascript(t.name) %>",';
    hashIncidentTypes["<%= t.id %>"] = "<%= escape_javascript(t.name) %>";
  <% end %>
  incidentTypeList = incidentTypeList.substring(0, incidentTypeList.length-1);

  <% for i in @incident %>
    updateIncident('<%= escape_javascript(i.location) %>', '<%= i.latitude %>', '<%= i.longitude %>', '<%= i.requested_amb_count %>', incidentTypeList, hashIncidentTypes["<%= i.incident_type_id %>"]);
  <% end %>
<% end %>

function updateIncident(location, latitude, longitude, requested_amb, incidentTypeList, incident_type) {
  var updateRoute = '/incidents/' + '<%= @incident_id %>' + '/resourceupdate';
  generatejEditableTextField('', location, 'incident_location', '2', 'incident[location]', updateRoute);
  generatejEditableTextField('', latitude, 'incident_latitude', '2', 'incident[latitude]', updateRoute);
  generatejEditableTextField('', longitude, 'incident_longitude', '2', 'incident[longitude]', updateRoute);
  generatejEditableCombo('', incident_type, 'incident_type', '1', 'incident_type[name]', incidentTypeList, 'incident_type', updateRoute);
  $("#requested_amb").text('REQUESTED: ' + requested_amb);
}

<% if @patients.count > 0 %>

  <% for n in @new_patients %>
    generatejEditableForNewPatient('<%= n.id %>', '<%= @incident_id %>', '<%= @authenticity_token %>');
  <% end %>

  resetPatientsTriage('<%= @general.count %>');
  <% for triage in @triage %>
    updatePatientsTriage('<%= escape_javascript(triage.tagColor) %>', '<%= triage.number %>');
  <% end %>

  var hospitalList = '';
  var hashHospitals = new Object();
  <% for h in @hospitals %>
    hospitalList = hospitalList + '"<%= h.id %>":"<%= escape_javascript(h.name) %>",';
    hashHospitals["<%= h.id %>"] = "<%= escape_javascript(h.name) %>";
  <% end %>
  hospitalList = hospitalList.substring(0, hospitalList.length-1);

  var ambulanceList = '';
  var hashAllAmbulances = new Object();
  <% for a in @all_ambulances %>
    ambulanceList = ambulanceList + '"<%= a.id %>":"<%= escape_javascript(a.idAmbulance) %>",';
    hashAllAmbulances["<%= a.id %>"] = "<%= escape_javascript(a.idAmbulance) %>";
  <% end %>
  ambulanceList = ambulanceList.substring(0, ambulanceList.length-1);

  <% for p in @patients %>
    var is_patient_deleted = '<%= p.is_deleted %>';
    if (is_patient_deleted == 'true') {
      deletePatient('<%= p.id %>');
    } else {
      updateModifiedPatientInfo('<%= p.id %>', '<%= p.numberOfTag %>', '<%= p.tagColor %>',
        '<%= p.sex %>', '<%= p.age %>', '<%= p.ageType %>', '<%= escape_javascript(p.complaint) %>',
        '<%= p.status %>', '<%= p.hospital_id %>', ambulanceList, hashAllAmbulances["<%= p.ambulance_id %>"],
        hospitalList, hashHospitals["<%= p.hospital_id %>"]);
    }
  <% end %>
<% end %>

function resetPatientsTriage(general) {
  $("#tagged").text("TAGGED:" + general);
  $("#red_triage").text("0");
  $("#yellow_triage").text("0");
  $("#green_triage").text("0");
  $("#black_triage").text("0");
}

function updatePatientsTriage(color, number) {
  if (color == "Red") {
    $("#red_triage").text(number);
  } else if (color == "Yellow") {
    $("#yellow_triage").text(number);
  } else if (color == "Green") {
    $("#green_triage").text(number);
  } else if (color == "Black") {
    $("#black_triage").text(number);
  }
}

function updateModifiedPatientInfo(id, tag, color, sex, age, ageType,
  complaint, status, hospital, ambulanceList, ambulanceValue, hospitalList, hospitalValue) {

  var data_id_text_field = '2';
  var updateRoute = '/incidents/' + '<%= @incident_id %>' + '/patients/' + id;
  generatejEditableTextField(id, tag, 'tagnum', data_id_text_field, 'patient[numberOfTag]', updateRoute);
  generatejEditableTextField(id, age, 'age', data_id_text_field, 'patient[age]', updateRoute);
  generatejEditableTextField(id, complaint, 'complaint', data_id_text_field, 'patient[complaint]', updateRoute);

  var td_class = '';
  if (color == "Red") {
    td_class = 'redPatient';
  } else if (color == "Yellow") {
    td_class = 'yellowPatient';
  } else if (color == "Green") {
    td_class = 'greenPatient';
  } else if (color == "Black") {
    td_class = 'blackPatient';
  }

  var dataContent = '';
  dataContent = '"Yellow":"Yellow","Black":"Black","Green":"Green","Red":"Red"';
  generatejEditableCombo(id, color, 'color', data_id_text_field, 'patient[tagColor]', dataContent, td_class, updateRoute);

  if (sex == "Male") {
    td_class = 'malePatient';
  } else if (sex == "Female") {
    td_class = 'femalePatient';
  }
  dataContent = '"Male":"Male","Female":"Female"';
  generatejEditableCombo(id, sex, 'sex', data_id_text_field, 'patient[sex]', dataContent, td_class, updateRoute);

  dataContent = '"Years":"Years","Days":"Days","Months":"Months"';
  generatejEditableCombo(id, ageType, 'ageType', data_id_text_field, 'patient[ageType]', dataContent, 'ageType', updateRoute);

  dataContent = '"At Scene":"At Scene","Transported":"Transported","Missing/Left Scene":"Missing/Left Scene"';
  generatejEditableCombo(id, status, 'patient_status', data_id_text_field, 'patient[status]', dataContent, 'patient_status', updateRoute);

  generatejEditableCombo(id, hospitalValue, 'hospital_patient', '2', 'hospital[name]', hospitalList, 'hospital_patient', updateRoute);

  generatejEditableCombo(id, ambulanceValue, 'ambulance_patient', '2', 'ambulance[idAmbulance]', ambulanceList, 'ambulance_patient', updateRoute);
}

function generatejEditableTextField(id, value, key, d_id, d_name, updateRoute) {
  $("#" + key + "_" + id).html('<span class="editable" data-id="' + d_id + '" data-name="' + d_name + '">' + value + '</span>');
    (function( $ ){
      $(function(){
          var args = {data: function(value, settings) {
            // Unescape HTML
            var retval = value
              .replace(/&amp;/gi, '&')
              .replace(/&gt;/gi, '>')
              .replace(/&lt;/gi, '<')
              .replace(/&quot;/gi, "\"");
            return retval;
          }};
          $.extend(args, {"name": d_name,"method":"PUT"});
          $(".editable[data-id='" + d_id + "'][data-name='" + d_name + "']").editable(updateRoute, args);
        });
      })( jQuery );
}

function generatejEditableCombo(id, value, key, d_id, d_name, dataContent, td_class, updateRoute) {
  $("#" + key + "_" + id).replaceWith('<td id="' + key + '_' + id + '" class="' + td_class + '"><span class="editable" data-id="' + d_id + '" data-name="' + d_name + '">' + value + '</span>');
        (function( $ ){
          $(function(){
            var args = {data: function(value, settings) {
              // Unescape HTML
              var retval = value
                .replace(/&amp;/gi, '&')
                .replace(/&gt;/gi, '>')
                .replace(/&lt;/gi, '<')
                .replace(/&quot;/gi, "\"");
              return retval;
            }};
            $.extend(args, {"name": d_name,"data":"{" + dataContent + "}","onblur":"submit","method":"PUT","type":"select"});
            $(".editable[data-id='" + d_id + "'][data-name='" + d_name + "']").editable(updateRoute, args);
          });
        })( jQuery ) + '</td>';
}

function generatejEditableForNewPatient(id, incident_id, authenticity_token) {
  deletePatient(id);
  $("#tbody_created_patients").append('<tr id="patient_' + id + '">'
    + '<td id="tagnum_' + id + '"></td>'
    + '<td id="color_' + id + '"></td>'
    + '<td id="sex_' + id + '"></td>'
    + '<td id="age_' + id + '"></td>'
    + '<td id="ageType_' + id + '"></td>'
    + '<td id="complaint_' + id + '"></td>'
    + '<td id="patient_status_' + id + '"></td>'
    + '<td id="hospital_patient_' + id + '"></td>'
    + '<td id="ambulance_patient_' + id + '"></td>'
    + '<td><form method="post" action="/incidents/' + incident_id + '/patients/' + id + '" data-remote="true" class="button_to"><div><input name="_method" type="hidden" value="delete"><input class="destroy" data-confirm="Are you sure?" type="submit" value="X"><input name="authenticity_token" type="hidden" value="' + authenticity_token + '"></div></form></td></tr>');
}

function deletePatient(id) {
  $("#patient_" + id).replaceWith('');
}

